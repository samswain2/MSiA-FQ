knitr::opts_chunk$set(echo = TRUE)
plot(toxicity$x, (toxicity$y/toxicity$n))
toxicity = data.frame(x=1:6, n=rep(250,6), y=c(28,53,93,126,172,197))
fit = glm(y/n ~ x, binomial, toxicity, weight=n)
plot(toxicity$x, (toxicity$y/toxicity$n))
plot(toxicity$x, (toxicity$y/toxicity$n))
points(toxicity$x, fit$fitted.values[1:6], pch=2, col=2)
x = seq(1, 6,length=100)
lines(x, predict(fit, data.frame(toxcicity=x), type="response"), col=2)
x_1e = -exp(fit$coef[1])/exp(fit$coef[2])
x_1e = -exp(fit$coef[1])/exp(fit$coef[2])
summary(fit)
x_1e = -exp(fit$coef[1])/exp(fit$coef[2])
summary(fit)
x_1e = (-exp(fit$coef[1]))/exp(fit$coef[2])
summary(fit)
x_1e = (fit$coef[1])/fit$coef[2]
summary(fit)
x_1e = (-fit$coef[1])/fit$coef[2]
summary(fit)
x_1e = (-fit$coef[1])/fit$coef[2]
confint(fit)
confint(fit, level = 99)
confint(fit, level = .99)
confint(fit, level = .99)[2:4]
confint(fit, level = .99)
confint(fit, level = .99)[2, 4]
confint(fit, level = .99)[2: 4]
confint(fit, level = .99)
confint(fit, level = .99)$x
confint(fit, level = .99)
coef_1f = coef_confint
coef_1f = coef_confint(fit, level = .99)
coef_1f = confint(fit, level = .99)
coef_1f
coef_1f[c(2, 4)]
coef_1f = confint(fit, level = .99)[c(2, 4)]
coef_1f = confint(fit, level = .99)[c(2, 4)]
coef_1f[c(2, 4)]
coef_1f = confint(fit, level = .99)
coef_1f[c(2, 4)]
coef_1f = confint(fit, level = .99)
exp(coef_1f[c(2, 4)])
summary(toxicity)
summary(toxicity)
toxicity
toxicity$y/toxicity$n
View(toxicity)
toxicity = data.frame(x=1:6, n=rep(250,6), y=c(28,53,93,126,172,197))
fit = glm(y/n ~ x, binomial, toxicity, weight=n)
p_hats = c(toxicity$y/toxicity$n)
toxicity = data.frame(x=1:6, n=rep(250,6), y=c(28,53,93,126,172,197))
fit = glm(y/n ~ x, binomial, toxicity, weight=n)
p_hats = c(toxicity$y/toxicity$n)
y_is = c(toxicity$y)
-2 * (y[1] * log(p_hats[1]/y_is[1]) + (1 - y_is[1]) * log((1-p_hats[1])/(1-y_is[1])))
-2 * (y_is[1] * log(p_hats[1]/y_is[1]) + (1 - y_is[1]) * log((1-p_hats[1])/(1-y_is[1])))
y_is[1]
p_hats[1]
log(p_hats[1]/y_is[1])
1 - y_is[1]
log((1-p_hats[1])/(1-y_is[1]))
1-p_hats[1]
1-y_is[1])
1-y_is[1]
1 - y_is[1]
log((1-p_hats[1])/(1-y_is[1]))
(1-p_hats[1])/(1-y_is[1])
(1-p_hats[1])/(1-y_is[1])
1-p_hats[1]
1-y_is[1]
-2 * (y_is[1] * log(p_hats[1]/y_is[1]) + (1 - y_is[1]) * log((1-p_hats[1])/(y_is[1]-250)))
(1-p_hats[1])/(y_is[1]-250)
-2 * (y_is[1] * log(p_hats[1]/y_is[1]) + (1 - y_is[1]) * log((1-p_hats[1])/(250-y_is[1])))
y_hat_sm = 0
-2 * (y_is[1] * log(p_hats[1]/y_is[1]) + (1 - y_hat_sm) * log((1-p_hats[1])/(1-y_hat_sm)))
y_hat_sm = 1
-2 * (y_is[1] * log(p_hats[1]/y_is[1]) + (1 - y_hat_sm) * log((1-p_hats[1])/(1-y_hat_sm)))
-2 * (y_is[1] * log(p_hats[1]) + (1 - y_is[1]) * log(1 - p_ats[1]))
-2 * (y_is[1] * log(p_hats[1]) + (1 - y_is[1]) * log(1 - p_gats[1]))
-2 * (y_is[1] * log(p_hats[1]) + (1 - y_is[1]) * log(1 - p_hats[1]))
-2 * (y_hat_sm * log(p_hats[1]) + (1 - y_hat_sm) * log(1 - p_hats[1]))
y_hat_sm = 0
y_hat_sm = 0
-2 * (y_hat_sm * log(p_hats[1]) + (1 - y_hat_sm) * log(1 - p_hats[1]))
y_hat_sm = 0
-2 * (y_hat_sm * log(p_hats[1]) + (1 - y_hat_sm) * log(1 - p_hats[1]))
